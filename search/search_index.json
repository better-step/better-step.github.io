{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Better Step: Open\u2011source CAD Data Conversion &amp; Sampling","text":"<p>Better Step is designed to unlock CAD data for research and industry. By converting proprietary STEP files into an open HDF5-based format, Better Step enables efficient processing on large-scale computing clusters\u2014eliminating the need for expensive proprietary licenses.</p>"},{"location":"#key-features","title":"Key Features","text":"<ul> <li>Open Format: Proprietary CAD files are converted into a widely accessible HDF5 format.</li> <li>Comprehensive Representation: Captures both the geometry (curves, surfaces) and topology (solids, shells, faces, loops) of CAD models.</li> <li>Robust Sampling Methods: Provides reliable methods to compute surface normals, detect sharp features, and generate point clouds for machine learning applications.</li> <li>Extensible API: Easily integrate the library into Python workflows.</li> <li>Command-Line Interface (CLI): Supports batch processing for streamlined integration in automated pipelines.</li> </ul>"},{"location":"#getting-started","title":"Getting Started","text":"<ul> <li>Visit the Installation page for setup instructions.</li> <li>Check out the Usage page for practical examples and workflows.</li> </ul>"},{"location":"#learn-more","title":"Learn More","text":"<ul> <li>API Documentation: Detailed overviews of modules like Geometry, Topology, Sampling, and Visualization.</li> <li>Examples: Interactive notebooks and sample code are provided to demonstrate advanced use cases.</li> <li>FAQ &amp; Changelog: Find answers to common questions and track project updates.</li> </ul> <p>Welcome to Better Step \u2013 your gateway to democratizing CAD data for research and industry!</p>"},{"location":"api_overview/","title":"Better Step API Overview","text":"<p>The Better Step API is divided into several core modules. Each module provides the functionality required to work with different aspects of CAD data processing.</p>"},{"location":"api_overview/#modules-include","title":"Modules Include","text":"<ul> <li>Geometry: Classes and methods to represent and manipulate curves and surfaces.</li> <li>Topology: Structures for organizing relationships between geometric entities (edges, faces, loops, shells, and solids).</li> <li>Sampling: Functions for extracting point clouds, computing normals, and generating features.</li> <li>Visualization: Tools to render and inspect CAD models and sampling results.</li> </ul> <p>Auto-generated API references (using mkdocstrings) are available within each module\u2019s documentation.</p>"},{"location":"changelog/","title":"Changelog","text":"<p>All notable changes are documented using the Keep a Changelog format.</p>"},{"location":"changelog/#version-100-april-1-2025","title":"Version 1.0.0 \u2013 April 1, 2025","text":""},{"location":"changelog/#added","title":"Added","text":"<ul> <li>STEP-to-HDF5 conversion support.</li> <li>Geometry, Topology, Sampling, and Visualization modules.</li> <li>CLI for batch CAD file processing.</li> </ul>"},{"location":"changelog/#fixed","title":"Fixed","text":"<ul> <li>Minor bugs in sampling logic.</li> <li>Improved documentation and added examples.</li> </ul>"},{"location":"common/","title":"Common Guidelines","text":""},{"location":"common/#coding-guidelines","title":"Coding Guidelines","text":"<ul> <li>Follow PEP 8 for code style.</li> <li>Use clear and concise docstrings for all code components.</li> <li>Write unit tests for all new features (see <code>tests/</code> folder).</li> </ul>"},{"location":"common/#code-of-conduct","title":"Code of Conduct","text":"<p>All contributors are expected to behave professionally and respectfully. Please read and follow our Code of Conduct.</p> <p>Let\u2019s keep Better Step clean, robust, and welcoming for everyone.</p>"},{"location":"contributing/","title":"Contributing to Better Step","text":"<p>We welcome contributions from the community!</p>"},{"location":"contributing/#how-to-contribute","title":"How to Contribute","text":"<ol> <li> <p>Fork the Repository    Create your own fork via GitHub.</p> </li> <li> <p>Clone Locally <pre><code>git clone https://github.com/yourusername/better-step.git\ncd better-step\n</code></pre></p> </li> <li> <p>Create a Feature Branch <pre><code>git checkout -b feature/your-feature-name\n</code></pre></p> </li> <li> <p>Make Changes and Commit <pre><code>git add .\ngit commit -m \"Add feature: description\"\ngit push origin feature/your-feature-name\n</code></pre></p> </li> <li> <p>Open a Pull Request    Submit a PR with a clear description.</p> </li> </ol>"},{"location":"contributing/#code-of-conduct","title":"Code of Conduct","text":"<p>Please be respectful and follow our Code of Conduct. See Common Guidelines for more details.</p>"},{"location":"contributing/#reporting-issues","title":"Reporting Issues","text":"<p>Found a bug or want to suggest a feature? Open a GitHub issue with a detailed description.</p>"},{"location":"faq/","title":"Frequently Asked Questions","text":"<p>Q1: What is the purpose of Better Step? A: Converts proprietary STEP files into an open HDF5 format, enabling data access without expensive licenses.</p> <p>Q2: How do I install Better Step? A: Refer to the Installation page. Install with pip or from source.</p> <p>Q3: Which Python versions are supported? A: Python 3.7 and later.</p> <p>Q4: I encountered an error during installation. What should I do? A: Review the Installation page or open a GitHub issue with error details.</p> <p>Q5: How can I contribute? A: See the Contributing page for instructions and guidelines.</p>"},{"location":"installation/","title":"Installation","text":""},{"location":"installation/#overview","title":"Overview","text":"<p>This guide details how to install the Better Step library, available on PyPI as the package <code>hdf5_mesh_sampler</code>, or from source via GitHub.</p>"},{"location":"installation/#prerequisites","title":"Prerequisites","text":"<ul> <li>Python 3.7 or later.</li> <li>HDF5 libraries (typically installed as part of the <code>h5py</code> package).</li> <li>Additional dependencies as listed in the project\u2019s requirements file.</li> </ul>"},{"location":"installation/#installation-via-pip","title":"Installation via pip","text":"<pre><code>pip install hdf5_mesh_sampler\n</code></pre>"},{"location":"installation/#installation-from-source","title":"Installation from Source","text":"<pre><code>git clone https://github.com/yourusername/better-step.git\ncd better-step\npip install -r requirements.txt\npython setup.py install\n</code></pre>"},{"location":"installation/#testing-your-installation","title":"Testing Your Installation","text":"<pre><code>python -c \"import hdf5_mesh_sampler; print(hdf5_mesh_sampler.version)\"\n</code></pre> <p>If you see a version number without error, the install is successful.</p> <p>Tip: We recommend creating a virtual environment for an isolated installation.</p>"},{"location":"usage/","title":"Usage","text":""},{"location":"usage/#overview","title":"Overview","text":"<p>Learn how to use the Better Step library to process CAD files. Load shapes from HDF5 files, sample geometry, and utilize the CLI for batch operations.</p>"},{"location":"usage/#basic-workflow","title":"Basic Workflow","text":""},{"location":"usage/#loading-a-cad-file","title":"Loading a CAD File","text":"<pre><code>from hdf5_mesh_sampler import Shape_archive\nshape = Shape_archive.load(\"data/sample_hdf5/Box.hdf5\")\nprint(\"Loaded shape:\", shape)\n</code></pre>"},{"location":"usage/#sampling-geometry","title":"Sampling Geometry","text":"<pre><code>from hdf5_mesh_sampler.sampling import surface_sampler\nsamples = surface_sampler.sample(shape, resolution=0.1)\nprint(\"Sampled points:\", samples)\n</code></pre>"},{"location":"usage/#using-the-cli","title":"Using the CLI","text":"<pre><code>python -m hdf5_mesh_sampler.cli --input data/sample_hdf5/Box.hdf5 --output output_directory\n</code></pre>"},{"location":"usage/#advanced-use-cases","title":"Advanced Use Cases","text":"<ul> <li>Learning Normals: Use sample data to train or validate normal estimation.</li> <li>Detecting Sharp Features: Analyze curves to detect geometric edges.</li> <li>Labeling Geometry: Assign labels based on detected primitive types.</li> </ul> <p>See the example notebooks in the Examples section for more details.</p>"},{"location":"api/geometry/","title":"Geometry Module","text":"<p>The Geometry module handles the representation and processing of geometric entities in CAD models.</p>"},{"location":"api/geometry/#key-components","title":"Key Components","text":"<ul> <li>Curve Processing: Classes for lines, circles, ellipses, B-splines, etc.</li> <li>Surface Processing: Classes for planes, cylinders, cones, spheres, tori, and B-spline surfaces.</li> </ul>"},{"location":"api/geometry/#usage-example","title":"Usage Example","text":"<pre><code>from hdf5_mesh_sampler.geometry.curve import BSplineCurve\nimport numpy as np\n\ncurve_data = {\n    'closed': False,\n    'degree': 3,\n    'poles': [[0, 0], [1, 2], [2, 3], [4, 1]],\n    'knots': [0, 0, 0, 1, 2, 2, 2],\n    'weights': [1, 1, 1, 1],\n    'interval': [[0, 1]],\n    'type': 'BSpline'\n}\n\nbspline_curve = BSplineCurve(curve_data)\nsample_points = np.linspace(0, 1, 100)\npoints = bspline_curve.sample(sample_points)\nprint(points)\n</code></pre> <p>Auto-generated API reference appears here via mkdocstrings.</p>"},{"location":"api/sampling/","title":"Sampling Module","text":"<p>Provides methods to sample CAD models for feature extraction.</p>"},{"location":"api/sampling/#key-components","title":"Key Components","text":"<ul> <li>Surface Sampler: Extracts surface samples at specific resolutions.</li> <li>Curve Sampler: Samples points from curves.</li> </ul>"},{"location":"api/sampling/#usage-example","title":"Usage Example","text":"<pre><code>from hdf5_mesh_sampler.sampling.surface_sampler import sample\n\npoints = sample(shape, resolution=0.1)\nprint(\"Sampled surface points:\", points)\n</code></pre> <p>Auto-generated API reference appears here via mkdocstrings.</p>"},{"location":"api/topology/","title":"Topology Module","text":"<p>Describes how geometric entities are connected to form complex 3D structures.</p>"},{"location":"api/topology/#key-components","title":"Key Components","text":"<ul> <li>Edges: Boundaries of surfaces tied to 3D curves.</li> <li>Faces: Surface regions trimmed by loops.</li> <li>Halfedges &amp; Loops: Fine-grained representation of boundaries.</li> <li>Shells: Groups of faces forming a boundary.</li> <li>Solids: Complete enclosed volumes.</li> </ul>"},{"location":"api/topology/#usage-example","title":"Usage Example","text":"<pre><code>from hdf5_mesh_sampler.topology import Face\nimport numpy as np\n\nface_data = {...}  # Example dictionary from HDF5\nface = Face(face_data)\nsample_params = np.linspace(0, 1, 50).reshape(-1,1)\nnormals = face.normal(sample_params)\nprint(normals)\n</code></pre> <p>Auto-generated API reference appears here via mkdocstrings.</p>"},{"location":"api/visualization/","title":"Visualization Module","text":"<p>Simple tools for rendering CAD shapes and sampling results.</p>"},{"location":"api/visualization/#usage-example","title":"Usage Example","text":"<pre><code>from hdf5_mesh_sampler.visualization.visualize import plot_shape\n\nplot_shape(shape)\n</code></pre> <p>Auto-generated API reference appears here via mkdocstrings.</p>"},{"location":"examples/intro/","title":"Examples","text":"In\u00a0[1]: Copied! <pre>print('Hello World!')\n</pre> print('Hello World!') <pre>Hello World!\n</pre>"}]}